/**
 * Clare Punts - Clare Punts Project
 * @authors 
 * @version v0.2.1
 * @link 
 * @license 
 */
!function(){"use strict";angular.module("app",["app.core","app.widgets","app.admin","app.dashboard","app.mySettings","app.bookings","app.layout","app.data","app.info","app.charts"])}(),function(){"use strict";angular.module("app.admin",["app.core","app.widgets"])}(),function(){"use strict";angular.module("blocks.exception",["blocks.logger"])}(),function(){"use strict";angular.module("blocks.filter",[])}(),function(){"use strict";angular.module("blocks.logger",[])}(),function(){"use strict";angular.module("blocks.modal",[])}(),function(){"use strict";angular.module("blocks.router",["ui.router","blocks.logger"])}(),function(){"use strict";angular.module("app.bookings",["app.core"])}(),function(){"use strict";angular.module("app.charts",["app.core"]).value("googleChartApiConfig",{version:"1.1",optionalSettings:{packages:["calendar"]}})}(),function(){"use strict";angular.module("app.core",["ngAnimate","ngResource","blocks.exception","blocks.logger","blocks.router","blocks.filter","blocks.modal","ui.router","ngplus","ui.bootstrap","checklist-model","formly","formlyBootstrap","daterangepicker","textAngular","googlechart"])}(),function(){"use strict";angular.module("app.dashboard",["app.core"])}(),function(){angular.module("app.data",[])}(),function(){"use strict";angular.module("app.info",["app.core"])}(),function(){"use strict";angular.module("app.layout",["app.core","ui.bootstrap.collapse"])}(),function(){"use strict";angular.module("app.mySettings",["app.core"])}(),function(){"use strict";angular.module("app.widgets",["app.core"])}(),function(){"use strict";function e(e,t,n,o){function r(){o.info("Activated Admin View"),i(),l()}function i(){c.adminRoutes=d.filter(function(e){return e.settings&&e.settings.nav&&e.settings.admin}).sort(function(e,t){return e.settings.nav-t.settings.nav})}function a(){c.todoList.push({todoText:c.todoInput,done:!1}),u(),c.todoInput=""}function s(){var e=c.todoList;c.todoList=[],angular.forEach(e,function(e){e.done||c.todoList.push(e)}),u()}function l(){n.get({Type:"todo"},function(e){c.todoList=JSON.parse(e.value),console.log(c.todoList),o.success("Todo list received successfully")},function(){o.error("Something went wrong getting the todo's")})}function u(){n.update({Type:"todo"},{value:JSON.stringify(c.todoList)},function(){o.success("Todo list updated successfully")},function(){o.error("Something went wrong updating the todo's")})}var c=this;c.user=t,c.title="Admin home",c.adminRoutes=[],c.todoAdd=a,c.remove=s;var d=e.getStates();c.todoList=[],c.todoInput="",r()}angular.module("app.admin").controller("AdminController",e),e.$inject=["routerHelper","userPrepService","SettingsServices","logger"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"admin",config:{url:"/admin",templateUrl:"app/admin/admin.html",controller:"AdminController",controllerAs:"vm",title:"Admin",resolve:{userPrepService:n},settings:{nav:1,content:'<i class="fa fa-lock"></i> Admin',admin:!0}}}]}function n(e){return e.get().$promise}n.$inject=["UserServices"],angular.module("app.admin").run(e),e.$inject=["routerHelper"]}(),function(){"use strict";function e(e,t,n,o,r,i){function a(){i.info("Activated Admin View"),l.punts.forEach(function(e){e.value=e.id}),l.punts.push({value:null,name:""})}function s(){var e={closeButtonText:"Cancel",actionButtonText:"Delete Booking",bodyText:"Delete Booking(s): "+l.form.booking.join(", "),headerText:"Are you sure you want to delete this booking?"};r.showModal({},e).then(function(){l.form.booking.forEach(function(e){o.remove({Id:e,from:null,to:null},function(){for(var t=0;t<l.bookings.length;t++)if(l.bookings[t].id===e){l.bookings.splice(t,1);break}i.success("Booking Deleted Successfully")},function(){i.error("Something went wrong deleting the booking")})})})}var l=this;l.deleteBooking=s,l.user=e,l.punts=t,l.bookings=n,l.title="Admin bookings",l.form={booking:[]},l.formFields=[],a(),l.formFields=[{key:"search",type:"horizontalInput",templateOptions:{type:"text",label:"Search:",placeholder:"Enter name"}},{key:"punt",type:"horizontalSelect",templateOptions:{label:"Punt:",options:l.punts}}]}angular.module("app.admin").controller("AdminBookingsController",e),e.$inject=["userPrepService","puntsPrepService","bookingsPrepService","BookingServices","modalService","logger"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"adminBookings",config:{url:"/admin/bookings",templateUrl:"app/admin/bookings/adminBookings.html",controller:"AdminBookingsController",controllerAs:"vm",title:"Admin bookings",resolve:{userPrepService:n,puntsPrepService:o,bookingsPrepService:r},settings:{nav:2,content:'<i class="fa fa-lock"></i> Admin bookings',admin:!0}}}]}function n(e){return e.get().$promise}function o(e){return e.query().$promise}function r(e){return e.query().$promise}n.$inject=["UserServices"],o.$inject=["PuntsServices"],r.$inject=["BookingServices"],angular.module("app.admin").run(e),e.$inject=["routerHelper"]}(),function(){"use strict";function e(e,t,n,o,r,i){function a(){r.info("Activated Admin Punts View")}function s(e){e.from=new Date(e.dateRange.startDate).getTime()/1e3,e.to=new Date(e.dateRange.endDate).getTime()/1e3,e.name?t.save(e,function(t){console.log(t.id);var n=new Date(e.dateRange.startDate),o=new Date(e.dateRange.endDate);e.availableFrom=new Date(n.getTime()-6e4*n.getTimezoneOffset()),e.availableTo=new Date(o.getTime()-6e4*o.getTimezoneOffset()),e.id=t.id,u.punts.push(e),r.success("Punt Submitted Successfully")},function(){r.error("Something went wrong creating the punt")}):t.update({puntsId:e.puntid},e,function(){u.punts.forEach(function(t){if(t.id===e.puntid){var n=new Date(e.dateRange.startDate),o=new Date(e.dateRange.endDate);t.availableFrom=new Date(n.getTime()-6e4*n.getTimezoneOffset()),t.availableTo=new Date(o.getTime()-6e4*o.getTimezoneOffset())}}),r.success("Punt Updated Successfully")},function(){r.error("Something went wrong updating the punt")})}function l(e){r.info("deleting punt");var n={closeButtonText:"Cancel",actionButtonText:"Delete Punt",headerText:"Delete punt "+e+"?",bodyText:"Are you sure you want to delete this punt?"};i.showModal({},n).then(function(){u.deletePuntForm.forEach(function(e){t.remove({puntsId:e},function(){for(var t=0;t<u.punts.length;t++)u.punts[t].id===e&&(r.log("deleting punt:"+t),u.punts.splice(t,1));r.success("Punt Deleted Successfully"),u.deletePuntForm=[]},function(){r.error("Something went wrong deleting the punt")})})})}var u=this;u.deletePunt=l,u.onSubmit=s,u.user=e,u.title={status:"Status Today",newPunt:"Add New Punt",editPunt:"Edit Punt",deletePunt:"Delete Punt"},u.punts=n,u.bookings=o,u.newPuntForm={dateRange:{}},u.editPuntForm={dateRange:{}},u.deletePuntForm=[],u.newPuntFormFields=[],u.editPuntFormFields=[],a(),u.newPuntFormFields=[{key:"name",type:"horizontalInput",templateOptions:{type:"text",label:"Name:",placeholder:"Enter punt name",required:!0}},{key:"dateRange",type:"daterange",templateOptions:{label:"Availability:",placeholder:"Select when the punt is available",required:!0}}],u.editPuntFormFields=[{key:"puntid",type:"horizontalSelect",templateOptions:{label:"Punt:",options:[],required:!0},expressionProperties:{"templateOptions.options":function(){return u.punts.forEach(function(e){e.value=e.id}),u.punts}}},{key:"dateRange",type:"daterange",templateOptions:{label:"Availability:",placeholder:"Select when the punt is available",required:!0}}]}angular.module("app.admin").controller("AdminPuntsController",e),e.$inject=["userPrepService","PuntsServices","puntsPrepService","bookingsPrepService","logger","modalService"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"adminPunts",config:{url:"/admin/punts",templateUrl:"app/admin/punts/adminPunts.html",controller:"AdminPuntsController",controllerAs:"vm",title:"Admin Punts",resolve:{userPrepService:n,puntsPrepService:o,bookingsPrepService:r},settings:{nav:3,content:'<i class="fa fa-lock"></i> Admin Punts',admin:!0}}}]}function n(e){return e.get().$promise}function o(e){return e.query().$promise}function r(e){return e.query().$promise}n.$inject=["UserServices"],o.$inject=["PuntsServices"],r.$inject=["BookingServices"],angular.module("app.admin").run(e),e.$inject=["routerHelper"]}(),function(){"use strict";function e(e,t,n,o){function r(){o.info("Activated Admin Punt Rules View")}function i(e,r){var i={closeButtonText:"Cancel",actionButtonText:"Update"+a(e),headerText:"Update"+a(e),bodyText:"Are you sure you want to update the "+a(e)+"?"};t.showModal({},i).then(function(){n.update({Type:e},r,function(){o.success(a(e)+" updated successfully")},function(){o.error("Something went wrong updating the "+e)})})}function a(e){return e.replace(/\w\S*/g,function(e){return e.charAt(0).toUpperCase()+e.substr(1).toLowerCase()})}var s=this;s.updateOptions=i,s.user=e,s.title={rules:"Update Punt Rules",committee:"Update Committee Page"},s.rules=n.get(),s.committee=n.get({Type:"committee"}),r()}angular.module("app.admin").controller("AdminSettingsController",e),e.$inject=["userPrepService","modalService","SettingsServices","logger"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"adminSettings",config:{url:"/admin/settings",templateUrl:"app/admin/settings/adminSettings.html",controller:"AdminSettingsController",controllerAs:"vm",title:"Admin Settings",resolve:{userPrepService:n},settings:{nav:5,content:'<i class="fa fa-lock"></i> Admin Settings',admin:!0}}}]}function n(e){return e.get().$promise}n.$inject=["UserServices"],angular.module("app.admin").run(e),e.$inject=["routerHelper"]}(),function(){"use strict";function e(e,t,n,o){function r(){o.info("Activated Admin View"),i()}function i(){return t.query({Id:"*"},function(e){m.allUsers=e})}function a(e){m.viewForm.user=[];var r={closeButtonText:"Cancel",actionButtonText:"Delete Users",headerText:"Are you sure you want to delete this user?"};e.forEach(function(e){r.bodyText="Deleting: "+e,n.showModal({},r).then(function(){t.remove({Id:e},function(){for(var t=0;t<m.allUsers.length;t++)if(m.allUsers[t].crsid===e){m.allUsers.splice(t,1);break}o.success("User deleted Successfully")},function(){o.error("Something went wrong deleting the user")})})})}function s(e){m.viewForm.user=[];var r={closeButtonText:"Cancel",actionButtonText:"Submit",headerText:"Are you sure you want to change the authorisation on this user?"};e.forEach(function(e){var i="0"===d(e,m.allUsers).authorised;r.bodyText=["Authorise",e,":",i].join(" "),n.showModal({},r).then(function(){t.update({Id:e},{authorised:i},function(){for(var t=0;t<m.allUsers.length;t++)if(m.allUsers[t].crsid===e){m.allUsers[t].authorised=i?"1":"0";break}o.success("User updated Successfully")},function(){o.error("Something went wrong updating the user")})})})}function l(e){m.addForm=[];for(var r={closeButtonText:"Cancel",actionButtonText:"Add Users",bodyText:["Adding the following users:",e.crsid,"as",e.type].join(" "),headerText:"Are you sure you want to add these users?"},i=/[a-z]{2,6}[0-9]+/i,a=e.crsid.split(","),s=0;s<a.length;s++)a[s]=a[s].trim(),""!==a[s]&&i.test(a[s])||a.splice(s,1);n.showModal({},r).then(function(){t.save({users:a,type:e.type},function(){a.forEach(function(t){m.allUsers.push({crsid:t,type:e.type,admin:"0",authorised:"1"})}),o.success("Users Added Successfully")},function(){o.error("Something went wrong adding the users")})})}function u(e){m.viewForm.user=[];var r={closeButtonText:"Cancel",actionButtonText:"Submit",headerText:"Are you sure you want to change the admin status of this user?"};e.forEach(function(e){var i="0"===d(e,m.allUsers).admin;r.bodyText=["Make",e,"an admin?:",i].join(" "),n.showModal({},r).then(function(){t.update({Id:e},{admin:i},function(){for(var t=0;t<m.allUsers.length;t++)if(m.allUsers[t].crsid===e){m.allUsers[t].admin=i?"1":"0";break}o.success("User updated Successfully")},function(){o.error("Something went wrong updating the user")})})})}function c(e){m.deleteForm=[];var r={closeButtonText:"Cancel",actionButtonText:"Purge Users",bodyText:"Delete all "+e+"? admins will not be deleted",headerText:"Are you sure you want to delete these users?"};n.showModal({},r).then(function(){t.remove({Id:"*",Type:e},function(){m.allUsers=m.allUsers.filter(function(t){return t.type!==e||"1"===t.admin}),o.success("Users Deleted Successfully")},function(){o.error("Something went wrong deleting the users")})})}function d(e,t){for(var n=0;n<t.length;n++)if(t[n].crsid===e)return t[n]}var m=this;m.deleteUser=a,m.disableUser=s,m.addUser=l,m.adminUser=u,m.purgeUsers=c,m.user=e,m.allUsers=[],m.title={add:"Add Users",edit:"Edit users","delete":"purge users",view:"View users"},m.viewForm={type:"admin",user:[]},m.addForm={},m.deleteForm={},m.viewFormFields=[],m.addFormFields=[],m.deleteFormFields=[],r(),m.viewFormFields=[{key:"search",type:"horizontalInput",templateOptions:{type:"text",label:"Search users:",placeholder:"Enter name or crsid"}},{key:"type",type:"horizontalSelect",templateOptions:{label:"User Type:",options:[{name:"MCR",value:"MCR"},{name:"Porter",value:"PORTER"},{name:"UCS",value:"UCS"},{name:"Staff",value:"STAFF"},{name:"Fellow",value:"FELLOW"},{name:"Admin",value:"admin"},{name:"All",value:null}]}}],m.addFormFields=[{key:"crsid",type:"horizontalTextarea",templateOptions:{type:"text",required:!0,rows:2,label:"CRSID(s):",placeholder:"Enter CRSID(s) seperated by a comma"}},{key:"type",type:"horizontalSelect",templateOptions:{label:"User Type:",required:!0,options:[{name:"MCR",value:"MCR"},{name:"Porter",value:"PORTER"},{name:"UCS",value:"UCS"},{name:"Staff",value:"STAFF"},{name:"Fellow",value:"FELLOW"}]}}],m.deleteFormFields=[{key:"type",type:"horizontalSelect",templateOptions:{label:"Delete:",required:!0,options:[{name:"MCR",value:"MCR"},{name:"Porter",value:"PORTER"},{name:"UCS",value:"UCS"},{name:"Staff",value:"STAFF"},{name:"Fellow",value:"FELLOW"},{name:"All",value:null}]}}]}angular.module("app.admin").controller("AdminUsersController",e),e.$inject=["userPrepService","UserServices","modalService","logger"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"adminUsers",config:{url:"/admin/users",templateUrl:"app/admin/users/adminUsers.html",controller:"AdminUsersController",controllerAs:"vm",title:"Admin Users",resolve:{userPrepService:n},settings:{nav:4,content:'<i class="fa fa-lock"></i> Admin Users',admin:!0}}}]}function n(e){return e.get().$promise}n.$inject=["UserServices"],angular.module("app.admin").run(e),e.$inject=["routerHelper"]}(),function(){"use strict";function e(){this.config={appErrorPrefix:void 0},this.configure=function(e){this.config.appErrorPrefix=e},this.$get=function(){return{config:this.config}}}function t(e){e.decorator("$exceptionHandler",n)}function n(e,t,n){return function(o,r){var i=t.config.appErrorPrefix||"",a={exception:o,cause:r};o.message=i+o.message,e(o,r),n.error(o.message,a)}}angular.module("blocks.exception").provider("exceptionHandler",e).config(t),t.$inject=["$provide"],n.$inject=["$delegate","exceptionHandler","logger"]}(),function(){"use strict";function e(e,t){function n(n){return function(o){var r,i;return o.data&&o.data.description&&(r="\n"+o.data.description,i=n+r),o.data.description=i,t.error(i),e.reject(o)}}var o={catcher:n};return o}e.$inject=["$q","logger"],angular.module("blocks.exception").factory("exception",e)}(),function(){"use strict";function e(){return function(e,t){return e.filter(function(e){var n=!0;return t&&(n=e.puntid===t),n})}}angular.module("blocks.filter").filter("bookingsByPunt",e)}(),function(){"use strict";function e(){return function(e){var t,n,o={},r=[];for(t=0;t<e.length;t++){var i=new Date(e[t].timeFrom);n=[i.getFullYear(),i.getMonth(),i.getDate()].join("-"),o[n]=o[n]||0,o[n]++}for(t in o)o.hasOwnProperty(t)&&r.push({c:[{v:new Date(t)},{v:o[t]}]});return r}}angular.module("blocks.filter").filter("bookingsToCalendarChart",e)}(),function(){"use strict";function e(){return function(e){return"1"===e?"✓":"✘"}}angular.module("blocks.filter").filter("checkmark",e)}(),function(){"use strict";function e(){return function(e,t,n){return t=new Date(t),n?n=new Date(n):(t=new Date(t).setUTCHours(0,0,0,0),n=new Date(t).setUTCHours(24,0,0,0)),e=e.filter(function(e){return new Date(e.timeFrom)<n&&new Date(e.timeTo)>t})}}angular.module("blocks.filter").filter("conflictBookings",e)}(),function(){"use strict";function e(){return function(e){return new Date(e)}}angular.module("blocks.filter").filter("dateParse",e)}(),function(){"use strict";function e(){return function(e,t,n){var o=new Date;return e=e.filter(function(e){var r=!1;return r="PORTER"===n?new Date(e.timeTo)>=o:new Date(e.timeTo)>=o&&e.booker===t})}}angular.module("blocks.filter").filter("myBookings",e)}(),function(){"use strict";function e(){return function(e,t){var n=new Date(t);return e=e.filter(function(e){return n>=new Date(e.availableFrom)&&n<new Date(e.availableTo)})}}angular.module("blocks.filter").filter("puntActive",e)}(),function(){"use strict";function e(){return function(e,t){for(var n=0;n<t.length;n++)if(t[n].id===e)return t[n].name;return!1}}angular.module("blocks.filter").filter("puntidToName",e)}(),function(){"use strict";function e(){return function(e,t){return t?(t=t.toUpperCase(),e.filter(function(e){return"ADMIN"===t?"1"===e.admin:e.type===t})):e}}angular.module("blocks.filter").filter("usersByType",e)}(),function(){"use strict";function e(e,t){function n(n,o,r){t.error(n,r),e.error("Error: "+n,o)}function o(n,o,r){t.info(n,r),e.info("Info: "+n,o)}function r(n,o,r){t.success(n,r),e.info("Success: "+n,o)}function i(n,o,r){t.warning(n,r),e.warn("Warning: "+n,o)}var a={showToasts:!0,error:n,info:o,success:r,warning:i,log:e.log};return a}angular.module("blocks.logger").factory("logger",e),e.$inject=["$log","toastr"]}(),function(){"use strict";function e(e){var t=this,n={backdrop:!0,keyboard:!0,modalFade:!0,templateUrl:"app/blocks/modal/modal.html"},o={closeButtonText:"Close",actionButtonText:"OK",headerText:"Proceed?",bodyText:"Perform this action?"};t.showModal=function(e,t){return e||(e={}),e.backdrop="static",this.show(e,t)},t.show=function(t,r){function i(e,t){e.modalOptions=s,e.modalOptions.ok=function(e){t.close(e)},e.modalOptions.close=function(e){t.dismiss("cancel")}}var a={},s={};return angular.extend(a,n,t),angular.extend(s,o,r),a.controller||(a.controller=i),i.$inject=["$scope","$uibModalInstance"],e.open(a).result}}angular.module("blocks.modal").service("modalService",e),e.$inject=["$uibModal"]}(),function(){"use strict";function e(e,t,n){function o(e,o,i,a){function s(e,o){e.forEach(function(e){e.config.resolve=angular.extend(e.config.resolve||{},r.resolveAlways),t.state(e.state,e.config)}),o&&!p&&(p=!0,n.otherwise(o))}function l(){o.$on("$stateChangeError",function(t,n,o,r,i,s){if(!m){f.errors++,m=!0;var l=n&&(n.title||n.name||n.loadedTemplateUrl)||"unknown target",u="Error routing to "+l+". "+(s.data||"")+". <br/>"+(s.statusText||"")+": "+(s.status||"");a.warning(u,[n]),e.path("/")}})}function u(){l(),d()}function c(){return i.get()}function d(){o.$on("$stateChangeSuccess",function(e,t){f.changes++,m=!1;var n=r.docTitle+" "+(t.title||"");o.title=n})}var m=!1,p=!1,f={errors:0,changes:0},g={configureStates:s,getStates:c,stateCounts:f};return u(),g}var r={docTitle:void 0,resolveAlways:{}};window.history&&window.history.pushState||(window.location.hash="/"),e.html5Mode(!0),this.configure=function(e){angular.extend(r,e)},this.$get=o,o.$inject=["$location","$rootScope","$state","logger"]}angular.module("blocks.router").provider("routerHelper",e),e.$inject=["$locationProvider","$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function e(e,t,n,o,r,i){function a(){i.info("Viewing Book A Punt"),c(),m()}function s(e){return 0!==g.bookings.filter(function(t){var n=new Date(g.dt),o=new Date(g.dt);return n.setUTCHours(0,0,0,0),o.setUTCHours(24,0,0,0),new Date(t.timeTo)>=n&&new Date(t.timeFrom)<o&&t.booker===e}).length}function l(){return e("conflictBookings")(g.bookings,g.form.timeFrom,g.form.timeTo)}function u(e){return g.conflicts.filter(function(t){return t.type===e})}function c(){var e=g.now.getFullYear();g.MichaelmasTerm.start=new Date(e,9,1,0,0,0,0),g.MichaelmasTerm.end=new Date(e,11,19,0,0,0,0),g.LentTerm.start=new Date(e,0,5,0,0,0,0),g.LentTerm.end=new Date(e,2,25,0,0,0,0),g.EasterTerm.start=new Date(e,3,10,0,0,0,0),g.EasterTerm.end=new Date(e,5,18,0,0,0,0);var t=g.MichaelmasTerm.start<=g.now&&g.MichaelmasTerm.end>=g.now,n=g.LentTerm.start<=g.now&&g.LentTerm.end>=g.now,o=g.EasterTerm.start<=g.now&&g.EasterTerm.end>=g.now;g.inTerm=t||n||o,t?g.currentTerm="Michaelmas":n?g.currentTerm="Lent":o&&(g.currentTerm="Easter")}function d(e){if(g.inTerm){var n={};switch(g.currentTerm){case"Michaelmas":n=g.MichaelmasTerm;break;case"Lent":n=g.LentTerm;break;case"Easter":n=g.EasterTerm;break;default:n={start:null,end:null}}return t.query({Id:"*",from:n.start,to:n.end},function(t){return t.filter(function(t){return t.booker===e})>=0})}}function m(){return g.user.authorised?"PORTER"!==g.form.type&&s(g.form.booker)?(g.bookingErrorMessage="Users are restricted to 1 booking per day!",g.canBook=!1,!1):(g.conflicts=l(),g.conflicts.length>0&&u(g.form.type).length>=3?(g.bookingErrorMessage="At most 3 punts can be concurrently booked by "+g.form.type+"!",void(g.canBook=!1)):("STAFF"===g.form.type||"FELLOW"===g.form.type?d(g.form.booker)&&(g.bookingErrorMessage="Staff and Fellows are restricted to 1 booking each during term time!",g.canBook=!1):g.canBook=!0,!0)):(g.bookingErrorMessage="You are not authorised!",g.canBook=!1,!1)}function p(){g.form.timeFrom=new Date(g.form.timeFrom).setUTCFullYear(g.dt.getUTCFullYear(),g.dt.getUTCMonth(),g.dt.getUTCDate()),"PORTER"!==g.form.type&&s(g.form.booker)&&(g.bookingErrorMessage="Users are restricted to 1 booking per day!",g.canBook=!1)}function f(e){var n=e.puntid;return m(),g.canBook?new Date(e.timeFrom)<g.now?void i.error("You can't make bookings in the past"):(e.timeFrom=e.timeFrom/1e3,e.timeTo=e.timeTo/1e3,void t.save({Id:null,from:null,to:null},e,function(){e.timeFrom=new Date(1e3*e.timeFrom),e.timeTo=new Date(1e3*e.timeTo),e.userType=e.type,e.puntid=n,g.bookings.push(e),m(),i.success("Booking submitted successfully!",e)},function(e){i.error("Something went wrong with the booking!",e)})):void i.error("Booking not allowed")}var g=this;g.changeInDate=p,g.onSubmit=f,g.title={calendar:"Choose A Date",form:"Book A Punt",conflicts:"Conflicts",dates:"Term Dates"},g.now=new Date,g.dt=new Date(g.now.getTime()-6e4*g.now.getTimezoneOffset()),g.MichaelmasTerm={start:"",end:""},g.LentTerm={start:"",end:""},g.EasterTerm={start:"",end:""},g.inTerm=!0,g.currentTerm="",g.punts=o,g.bookings=n,g.user=r,g.userTypes=[],g.form={},g.formFields=[],g.options={},g.canBook=!0,g.bookingErrorMessage="",a(),g.userTypes=[{name:"Porter",value:"PORTER"},{name:"Staff",value:"STAFF"},{name:"Fellow",value:"FELLOW"},{name:"MCR member",value:"MCR"},{name:"UCS member",value:"UCS"}],g.form={name:g.user.name,phone:g.user.phone,timeFrom:g.dt,booker:g.user.crsid,type:g.user.type},g.options={datepickerMode:"day",minDate:new Date,showWeeks:!1},g.options.minDate.setUTCHours(0,0,0,0),g.formFields=[{key:"name",type:"horizontalInput",templateOptions:{type:"text",label:"Name:",placeholder:"Enter name",required:!0}},{key:"booker",type:"horizontalInput",templateOptions:{type:"text",label:"CRSID:",placeholder:"Enter CRSID"},hideExpression:function(){return"PORTER"!==g.user.type},validators:{crsid:{expression:function(e,t){var n=t||e;return/[a-z]{2,6}[0-9]+/.test(n)}}},watcher:{listener:function(e,t){t&&m()}},expressionProperties:{"templateOptions.required":function(){return"PORTER"===g.user.type}}},{key:"type",type:"horizontalSelect",templateOptions:{label:"User type:",options:g.userTypes},hideExpression:function(){return"PORTER"!==g.user.type},watcher:{listener:function(e,t){t&&m()}},expressionProperties:{"templateOptions.required":function(){return"PORTER"===g.user.type}}},{key:"phone",type:"phone",templateOptions:{type:"text",label:"Mobile:",placeholder:"Enter mobile",required:!0}},{key:"puntid",type:"horizontalSelect",templateOptions:{label:"Punt:",options:[],required:!0},expressionProperties:{"templateOptions.options":function(t,n,o){var r=e("puntActive")(g.punts,o.model.timeFrom);if(o.model.timeFrom&&o.model.timeTo){for(var i=[],a=e("conflictBookings")(g.bookings,o.model.timeFrom,o.model.timeTo),s=0;s<a.length;s++)i.push(a[s].puntid);r=r.filter(function(e){return i.indexOf(e.id)<0})}return r.forEach(function(e){e.value=e.id}),r}}},{key:"timeFrom",type:"horizontalSelect",templateOptions:{label:"Start Time:",options:[],required:!0},expressionProperties:{"templateOptions.options":function(){return[{name:"00:00am",value:new Date(g.dt).setUTCHours(0,0,0,0)},{name:"07:00am",value:new Date(g.dt).setUTCHours(7,0,0,0)},{name:"08:00am",value:new Date(g.dt).setUTCHours(8,0,0,0)},{name:"09:00am",value:new Date(g.dt).setUTCHours(9,0,0,0)},{name:"10:00am",value:new Date(g.dt).setUTCHours(10,0,0,0)},{name:"11:00am",value:new Date(g.dt).setUTCHours(11,0,0,0)},{name:"12:00pm",value:new Date(g.dt).setUTCHours(12,0,0,0)},{name:"01:00pm",value:new Date(g.dt).setUTCHours(13,0,0,0)},{name:"02:00pm",value:new Date(g.dt).setUTCHours(14,0,0,0)},{name:"03:00pm",value:new Date(g.dt).setUTCHours(15,0,0,0)},{name:"04:00pm",value:new Date(g.dt).setUTCHours(16,0,0,0)},{name:"05:00pm",value:new Date(g.dt).setUTCHours(17,0,0,0)},{name:"06:00pm",value:new Date(g.dt).setUTCHours(18,0,0,0)},{name:"07:00pm",value:new Date(g.dt).setUTCHours(19,0,0,0)},{name:"08:00pm",value:new Date(g.dt).setUTCHours(20,0,0,0)},{name:"09:00pm",value:new Date(g.dt).setUTCHours(21,0,0,0)},{name:"10:00pm",value:new Date(g.dt).setUTCHours(22,0,0,0)},{name:"11:00pm",value:new Date(g.dt).setUTCHours(23,0,0,0)}]}}},{key:"timeTo",type:"horizontalSelect",templateOptions:{label:"Duration:",options:[],required:!0},expressionProperties:{"templateOptions.options":function(e,t,n){var o=new Date(n.model.timeFrom),r=new Date(o),i=new Date(o),a=new Date(o);if(r.setUTCHours(o.getUTCHours()+3),i.setUTCHours(7,0,0,0),a.setUTCHours(24,0,0,0),i>o)return[{name:"7hr",value:new Date(g.dt).setUTCHours(7,0,0,0)}];var s;switch(new Date(a-o).getHours()){case 0:s=[];break;case 1:s=[{name:"1hr",value:a.setUTCHours(23,59,59)}];break;case 2:s=[{name:"1hr",value:new Date(o).setUTCHours(23,0,0,0)},{name:"2hr",value:a.setUTCHours(23,59,59)}];break;case 3:s=[{name:"1hr",value:new Date(o).setUTCHours(22,0,0,0)},{name:"2hr",value:new Date(o).setUTCHours(23,0,0,0)},{name:"3hr",value:a.setUTCHours(23,59,59)}];break;default:s=[{name:"1hr",value:r.setUTCHours(o.getUTCHours()+1)},{name:"2hr",value:r.setUTCHours(o.getUTCHours()+2)},{name:"3hr",value:r.setUTCHours(o.getUTCHours()+3)}]}return s}}}]}angular.module("app.bookings").controller("BookAPuntController",e),e.$inject=["$filter","BookingServices","bookingsPrepService","puntsPrepService","userPrepService","logger"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"bookAPunt",config:{url:"/book",templateUrl:"app/bookings/bookAPunt.html",controller:"BookAPuntController",controllerAs:"vm",title:"bookAPunt",resolve:{puntsPrepService:n,bookingsPrepService:o,userPrepService:r},settings:{nav:2,content:'<i class="fa fa-ship"></i> Book A Punt'}}}]}function n(e){return e.query().$promise}function o(e){return e.query().$promise}function r(e){return e.get().$promise}n.$inject=["PuntsServices"],o.$inject=["BookingServices"],r.$inject=["UserServices"],angular.module("app.bookings").run(e),e.$inject=["routerHelper"]}(),function(){"use strict";function e(e,t,n,o,r,i){function a(){i.info("Viewing My bookings"),u.user.bookings=s()}function s(){return u.bookings.filter(function(e){var t=!0;return t="PORTER"===u.user.type?new Date(e.timeTo)>=u.now:new Date(e.timeTo)>=u.now&&e.booker===u.user.crsid})}function l(){if(u.form.length<1)i.error("Nothing selected");else{var t={closeButtonText:"Cancel",actionButtonText:"Delete Booking",bodyText:"Delete Booking(s): "+u.form.join(", "),headerText:"Are you sure you want to delete this booking?"};n.showModal({},t).then(function(){u.form.forEach(function(t){e.remove({Id:t,from:null,to:null},function(){for(var e=0;e<u.user.bookings.length;e++)if(u.user.bookings[e].id===t){u.user.bookings.splice(e,1);break}i.success("Booking Deleted Successfully")},function(){i.error("Something went wrong deleting the booking")})})})}}var u=this;u.now=new Date,u.title="My bookings",u.deleteBooking=l,u.punts=o,u.bookings=t,u.user=r,u.form=[],a()}angular.module("app.bookings").controller("MyBookingsController",e),e.$inject=["BookingServices","bookingsPrepService","modalService","puntsPrepService","userPrepService","logger"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"myBookings",config:{url:"/mybookings",templateUrl:"app/bookings/myBookings.html",controller:"MyBookingsController",controllerAs:"vm",title:"myBookings",resolve:{puntsPrepService:n,bookingsPrepService:o,userPrepService:r},settings:{nav:2,content:'<i class="fa fa-calendar-o"></i> My bookings'}}}]}function n(e){return e.query().$promise}function o(e){return e.query().$promise}function r(e){return e.get().$promise}n.$inject=["PuntsServices"],o.$inject=["BookingServices"],r.$inject=["UserServices"],angular.module("app.bookings").run(e),e.$inject=["routerHelper"]}(),function(){"use strict";function e(e,t,n,o,r){function i(){r.info("Viewing my Charts"),a()}function a(){n.get(function(e){d.user=e,s(e.crsid)})}function s(){t.query({Id:"*",from:null,to:null},function(e){d.rawBookings=e,l()})}function l(e){u()}function u(){switch(d.form.group){case 7:d.myChartObject.data.rows=e("bookingsToCalendarChart")(d.rawBookings.filter(function(e){return"PORTER"===e.userType}));break;case 6:d.myChartObject.data.rows=e("bookingsToCalendarChart")(d.rawBookings.filter(function(e){return"STAFF"===e.userType}));break;case 5:d.myChartObject.data.rows=e("bookingsToCalendarChart")(d.rawBookings.filter(function(e){return"FELLOW"===e.userType}));break;case 4:d.myChartObject.data.rows=e("bookingsToCalendarChart")(d.rawBookings.filter(function(e){return"UCS"===e.userType}));break;case 3:d.myChartObject.data.rows=e("bookingsToCalendarChart")(d.rawBookings.filter(function(e){return"MCR"===e.userType}));break;case 2:d.myChartObject.data.rows=e("bookingsToCalendarChart")(d.rawBookings);break;case 1:default:d.myChartObject.data.rows=e("bookingsToCalendarChart")(d.rawBookings.filter(function(e){return e.booker===d.user.crsid}))}c()}function c(){}var d=this;d.title="My Usage",d.user={},d.form={chartType:1,group:1},d.formFields=[],d.rawBookings=[],d.myChartObject={type:"Calendar",data:{cols:[{type:"date",id:"Date"},{type:"number",id:"Bookings"}],rows:[]},options:{title:"",Height:"500px",width:"350px",calendar:{cellSize:12}}},i(),d.formFields=[{key:"chartType",type:"horizontalSelect",templateOptions:{label:"Display:",options:[{name:"Calendar",value:1},{name:"Hourly",value:2}]}},{key:"group",type:"horizontalSelect",templateOptions:{label:"Display:",options:[{name:"My Usage",value:1},{name:"All Usage",value:2},{name:"MCR Usage",value:3},{name:"UCS Usage",value:4},{name:"Fellows Usage",value:5},{name:"Staff Usage",value:6},{name:"Porters Usage",value:7}]},hideExpression:function(e,t,n){return 1!==n.model.chartType},watcher:{listener:function(e,t){t&&l(t)}}}]}angular.module("app.charts").controller("ChartsController",e),e.$inject=["$filter","BookingServices","UserServices","$rootScope","logger"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"myCharts",config:{url:"/mycharts",templateUrl:"app/charts/myCharts.html",controller:"ChartsController",controllerAs:"vm",title:"My Charts",settings:{nav:7,content:'<i class="fa fa-area-chart"></i> My Charts'}}}]}angular.module("app.charts").run(e),e.$inject=["routerHelper"]}(),function(){"use strict";function e(e){e.options.timeOut=4e3,e.options.positionClass="toast-bottom-right"}
function t(e,t,n){e.debugEnabled&&e.debugEnabled(!0),n.configure(o.appErrorPrefix),t.configure({docTitle:o.appTitle+": "})}var n=angular.module("app.core");n.config(e),e.$inject=["toastr"];var o={appErrorPrefix:"[clarePunts Error] ",appTitle:"Clare Punts"};n.value("config",o),n.config(t),t.$inject=["$logProvider","routerHelperProvider","exceptionHandlerProvider"]}(),function(){"use strict";angular.module("app.core").constant("toastr",toastr).constant("moment",moment)}(),function(){"use strict";function e(e){var n="/404";e.configureStates(t(),n)}function t(){return[{state:"404",config:{url:"/404",templateUrl:"app/core/404.html",title:"404"}}]}e.$inject=["routerHelper"],angular.module("app.core").run(e)}(),function(){"use strict";function e(e){function t(e){return e=e.replace(/[\-_\s]+(.)?/g,function(e,t){return t?t.toUpperCase():""}),e.replace(/^([A-Z])/,function(e,t){return t?t.toLowerCase():""})}var n={};n={};var o=["date-disabled","custom-class","show-weeks","starting-day","init-date","min-mode","max-mode","format-day","format-month","format-year","format-day-header","format-day-title","format-month-title","year-range","shortcut-propagation","datepicker-popup","show-button-bar","current-text","clear-text","close-text","close-on-date-selection","datepicker-append-to-body","meridians","readonly-input","mousewheel","arrowkeys"];angular.forEach(o,function(e){n[t(e)]={attribute:e}});var r=["datepicker-mode","min-date","max-date","hour-step","minute-step","show-meridian","min","max","readonly-input","options"];angular.forEach(r,function(e){n[t(e)]={bound:e}}),e.setType({name:"timepicker",template:['<span uib-dropdown auto-close="outsideClick">',"<a uib-dropdown-toggle>",'{{model[options.key]| date:"shortTime":"UTC"}}',"</a>","<ul uib-dropdown-menu>","<li>",'<uib-timepicker ng-model="model[options.key]" cp-widget-datetimepicker-patch></uib-timepicker>',"</li>","</ul>","</span>"].join(" "),wrapper:["horizontalBootstrapLabel","bootstrapHasError"],defaultOptions:{ngModelAttrs:n,templateOptions:{datepickerOptions:{}}}}),e.setType({name:"daterange",template:['<input date-range-picker class="form-control date-picker" type="text" ng-model="model[options.key]" />'].join(" "),wrapper:["horizontalBootstrapLabel","bootstrapHasError"],defaultOptions:{ngModelAttrs:n,templateOptions:{datepickerOptions:{}}}}),e.setWrapper({name:"horizontalBootstrapLabel",template:['<label for="{{::id}}" class="col-xs-offset-1 col-xs-4 col-md-3 form-control-label">','{{to.label}} {{to.required ? "*" : ""}}',"</label>",'<div class="col-xs-6 col-md-7">',"<formly-transclude></formly-transclude>","</div>"].join(" ")}),e.setWrapper({name:"horizontalBootstrapCheckbox",template:['<div class="col-sm-offset-2 col-sm-8">',"<formly-transclude></formly-transclude>","</div>"].join(" ")}),e.setType({name:"horizontalInput","extends":"input",wrapper:["horizontalBootstrapLabel","bootstrapHasError"]}),e.setType({name:"horizontalTextarea","extends":"textarea",wrapper:["horizontalBootstrapLabel","bootstrapHasError"]}),e.setType({name:"horizontalSelect","extends":"select",wrapper:["horizontalBootstrapLabel","bootstrapHasError"]}),e.setType({name:"horizontalCheckbox","extends":"checkbox",wrapper:["horizontalBootstrapCheckbox","bootstrapHasError"]}),e.setType({name:"phone","extends":"horizontalInput",defaultOptions:{validators:{mobile:{expression:function(e,t){var n=t||e,o=new RegExp(["^\\(?(?:(?:0(?:0|11)\\)?[\\s-]?\\(?|\\+)44\\)?[\\s-]?","\\(?(?:0\\)?[\\s-]?\\(?)?|0)(?:\\d{2}\\)?[\\s-]?\\d{4}","[\\s-]?\\d{4}|\\d{3}\\)?[\\s-]?\\d{3}[\\s-]?\\d{3,4}|","\\d{4}\\)?[\\s-]?(?:\\d{5}|\\d{3}[\\s-]?\\d{3})|\\d{5}","\\)?[\\s-]?\\d{4,5}|8(?:00[\\s-]?11[\\s-]?11|45[\\s-]?","46[\\s-]?4\\d))(?:(?:[\\s-]?(?:x|ext\\.?\\s?|\\#)\\d+)?)$"].join(""));return o.test(n)}}},templateOptions:{label:"Mobile:",placeholder:"Enter a your mobile address"}}})}var t=angular.module("app.core");t.config(e),e.$inject=["formlyConfigProvider"]}(),function(){"use strict";angular.module("app.core").constant("version","0.2.1")}(),function(){"use strict";function e(e,t,n){function o(){n.info("Viewing Punt Status")}var r=this;r.title="Status Today",r.punts=t,r.bookings=e,o()}angular.module("app.dashboard").controller("DashboardController",e),e.$inject=["bookingsPrepService","puntsPrepService","logger"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"dashboard",config:{url:"/",templateUrl:"app/dashboard/dashboard.html",controller:"DashboardController",controllerAs:"vm",title:"dashboard",resolve:{puntsPrepService:n,bookingsPrepService:o},settings:{nav:1,content:'<i class="fa fa-dashboard"></i> Dashboard'}}}]}function n(e){return e.query().$promise}function o(e){return e.query().$promise}n.$inject=["PuntsServices"],o.$inject=["BookingServices"],angular.module("app.dashboard").run(e),e.$inject=["routerHelper"]}(),function(){"use strict";function e(e){var t=new Date;t.setUTCHours(0,0,0,0);var n=Math.floor(t.getTime()/1e3);return e("rest/booking/:Id/:from/:to",{Id:"*",from:n,to:null})}angular.module("app.data").factory("BookingServices",e),e.$inject=["$resource"]}(),function(){"use strict";function e(e){return e("rest/punts/:puntsId",null,{get:{method:"GET",isArray:!0},update:{method:"PUT"}})}angular.module("app.data").factory("PuntsServices",e),e.$inject=["$resource"]}(),function(){"use strict";function e(e){return e("rest/settings/:Type",{Type:"rules"},{update:{method:"PUT"}})}angular.module("app.data").factory("SettingsServices",e),e.$inject=["$resource"]}(),function(){"use strict";function e(e){return e("rest/user/:Id/:Type",null,{update:{method:"PUT"}})}angular.module("app.data").factory("UserServices",e),e.$inject=["$resource"]}(),function(){"use strict";function e(e,t){function n(){t.info("Viewing Punt Committee")}var o=this;o.title="Punt Committee",o.contact=e,n()}angular.module("app.info").controller("ContactController",e),e.$inject=["settingsPrepServices","logger"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"contact",config:{url:"/contact",templateUrl:"app/info/contact.html",controller:"ContactController",controllerAs:"vm",title:"contact",resolve:{settingsPrepServices:n},settings:{nav:6,content:'<i class="fa fa-envelope"></i> Contact'}}}]}function n(e){return e.get({Type:"committee"}).$promise}n.$inject=["SettingsServices"],angular.module("app.info").run(e),e.$inject=["routerHelper"]}(),function(){"use strict";function e(e,t){function n(){t.info("Viewing Punt Rules")}var o=this;o.title="Punt Rules",o.rules=e,n()}angular.module("app.info").controller("RulesController",e),e.$inject=["settingsPrepServices","logger"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"rules",config:{url:"/rules",templateUrl:"app/info/rules.html",controller:"RulesController",controllerAs:"vm",title:"rules",resolve:{settingsPrepServices:n},settings:{nav:5,content:'<i class="fa fa-file-text"></i> Rules'}}}]}function n(e){return e.get().$promise}n.$inject=["SettingsServices"],angular.module("app.info").run(e),e.$inject=["routerHelper"]}(),function(){"use strict";function e(){function e(e,t,n,o){function r(){i(),a()}function i(){l.navRoutes=u.filter(function(e){return e.settings&&e.settings.nav&&!e.settings.admin}).sort(function(e,t){return e.settings.nav-t.settings.nav}),l.adminRoutes=u.filter(function(e){return e.settings&&e.settings.nav&&e.settings.admin}).sort(function(e,t){return e.settings.nav-t.settings.nav})}function a(){l.user=o.get(function(e){l.admin=Boolean(e.admin)})}function s(t){if(!t.title||!e.current||!e.current.title)return"";var n=t.title;return e.current.title.substr(0,n.length)===n?"current":""}var l=this;l.title=n.appTitle,l.user="",l.admin=!1,l.navRoutes=[],l.adminRoutes=[];var u=t.getStates();l.isCurrent=s,r()}var t={bindToController:!0,controller:e,controllerAs:"vm",restrict:"EA",scope:{},templateUrl:"app/layout/cp-top-nav.html"};return e.$inject=["$state","routerHelper","config","UserServices"],t}angular.module("app.layout").directive("cpTopNav",e)}(),function(){"use strict";function e(e,t,n,o,r){function i(){o.success(n.appTitle+" loaded!",null),a()}function a(){t(function(){e.showSplash=!1},1e3)}var s=this;s.busyMessage="Please wait ...",s.version=r,s.isBusy=!0,e.showSplash=!0,s.navline={title:n.appTitle,text:"Created by Richard Gunning",link:"http://twitter.com/rjgunning"},i()}angular.module("app.layout").controller("ShellController",e),e.$inject=["$rootScope","$timeout","config","logger","version"]}(),function(){"use strict";function e(e,t,n){function o(t){e.update({Id:r.user.crsid},t,function(){n.success("Settings Updated")},function(){n.error("Something went wrong updating your settings")})}var r=this;r.title="My Settings",r.updateUser=o,r.user=t,r.form={name:r.user.name,phone:r.user.phone},r.formFields=[{key:"name",type:"horizontalInput",templateOptions:{type:"text",label:"Name:",placeholder:"Enter name",required:!0},validation:{messages:{required:"Name is Required"}}},{key:"phone",type:"phone",templateOptions:{type:"text",label:"Mobile",placeholder:"Enter mobile",required:!0}}]}angular.module("app.mySettings").controller("MySettingsController",e),e.$inject=["UserServices","userPrepService","logger"]}(),function(){"use strict";function e(e){e.configureStates(t())}function t(){return[{state:"mySettings",config:{url:"/mysettings",templateUrl:"app/mySettings/mySettings.html",controller:"MySettingsController",controllerAs:"vm",title:"mySettings",resolve:{userPrepService:n},settings:{nav:3,content:'<i class="fa fa-gear"></i> My Settings'}}}]}function n(e){return e.get().$promise}n.$inject=["UserServices"],angular.module("app.mySettings").run(e),e.$inject=["routerHelper"]}(),function(){"use strict";function e(){var e={scope:{labelText:"="},transclude:!0,template:'<div><div class="contentLabel">{{labelText}}</div><div class="contentBox" ng-transclude></div></div>',replace:!0,restrict:"EA"};return e}angular.module("app.widgets").directive("cpWidgetContainer",e)}(),function(){"use strict";function e(){return{restrict:"A",priority:1,require:"ngModel",link:function(e,t,n,o){o.$formatters.push(function(e){var t=new Date(e);return t=new Date(t.getTime()+6e4*t.getTimezoneOffset())}),o.$parsers.push(function(e){var t=new Date(e.getTime()-6e4*e.getTimezoneOffset());return t})}}}angular.module("app.widgets").directive("cpWidgetDatetimepickerPatch",e)}(),function(){"use strict";function e(){var e={scope:{labelText:"@",labelFor:"@"},transclude:!0,template:'<div class="form-group form-group-sm row"><label for="{{labelFor}}" class="col-sm-2 form-control-label">{{labelText}}</label><div class="controls col-sm-10" ng-transclude></div></div>',replace:!0,restrict:"EA"};return e}angular.module("app.widgets").directive("cpWidgetForm",e)}(),function(){"use strict";function e(){function e(){function e(){void 0!==n.punts&&t()}function t(){var e=new Date,t=(new Date).setHours(24,0,0,0),o=n.bookings.filter(function(t){return new Date(t.timeFrom)<=e&&new Date(t.timeTo)>=e}),r=n.bookings.filter(function(n){return new Date(n.timeFrom)>=e&&new Date(n.timeTo)<=t});return n.punts.forEach(function(t){t.currentStatus="",t.currentBooking="",t.nextBooking="";var n=new Date(t.availableFrom),i=new Date(t.availableTo);return e>n&&i>e?(t.currentBooking=o.filter(function(e){return e.puntid===t.id})[0],t.nextBooking=r.filter(function(e){return e.puntid===t.id}),t.nextBooking=t.nextBooking.sort(function(e,t){return new Date(e.timeFrom)-new Date(t.timeFrom)})[0],t.currentBooking?t.currentStatus="Busy":t.currentStatus="Available"):t.currentStatus="Inactive",t})}var n=this;e()}var t={scope:{punts:"=",bookings:"="},templateUrl:"app/widgets/widget-punt-status.html",restrict:"EA",controller:e,controllerAs:"vm",bindToController:!0};return t}function t(){return function(e){var t="";switch(e){case"Inactive":t="red circle";break;case"Available":t="green circle";break;case"Busy":t="yellow circle";break;default:t="green circle"}return t}}function n(e){return function(t){var n="";if(t){var o=e("date")(new Date(t.timeFrom),"shortTime","UTC"),r=e("date")(new Date(t.timeTo),"shortTime","UTC");n=t.booker+": "+o+" - "+r}return n}}function o(){return function(e){var t="";return e&&(t=e.name+" - "+e.phone),t}}n.$inject=["$filter"],angular.module("app.widgets").directive("cpWidgetPuntStatus",e).filter("statusCircle",t).filter("bookingSimple",n).filter("bookingTooltip",o)}(),angular.module("app.core").run(["$templateCache",function(e){e.put("app/admin/admin.html",'<div class=container-fluid ng-if="vm.user.admin === \'1\'"><div class=row><cp-widget-container class=col-xs-12 label-text=vm.title><div class=padded-container><h1>Welcome Admiral {{vm.user.name}}</h1><h2>Where would you like to go?</h2><ul><li ng-repeat="r in vm.adminRoutes"><a ui-sref={{r.name}} ng-bind-html=r.settings.content></a></li></ul><h2>TODO:</h2><form ng-submit=vm.todoAdd()><input type=text ng-model=vm.todoInput size=50 placeholder="Add New"> <input type=submit class="btn btn-primary" value="Add New"></form><br><div ng-repeat="x in vm.todoList"><input type=checkbox ng-model=x.done> <span ng-bind=x.todoText></span></div><p><button class="btn btn-danger" ng-click=vm.remove()>Remove marked</button></p></div></cp-widget-container></div></div>'),e.put("app/bookings/bookAPunt.html","<section id=book-a-punt-view><div class=container-fluid><div class=\"row topbuffer\"><cp-widget-container class=col-sm-12 label-text=vm.title.dates><table><thead><tr><td>Michaelmas Term</td><td>Lent Term</td><td>Easter Term</td></tr></thead><tbody><tr><td><span>{{vm.MichaelmasTerm.start | date:'fullDate'}}</span> - <span>{{vm.MichaelmasTerm.end | date:'mediumDate'}}</span></td><td><span>{{vm.LentTerm.start| date:'mediumDate'}}</span> - <span>{{vm.LentTerm.end| date:'mediumDate'}}</span></td><td><span>{{vm.EasterTerm.start| date:'mediumDate'}}</span> - <span>{{vm.EasterTerm.end| date:'mediumDate'}}</span></td></tr></tbody></table></cp-widget-container></div><div class=\"row topbuffer\"><cp-widget-container class=col-sm-6 label-text=vm.title.calendar><uib-datepicker ng-model=vm.dt class=\"well well-sm cp-calendar\" cp-widget-datetimepicker-patch datepicker-options=vm.options ng-change=vm.changeInDate()></uib-datepicker></cp-widget-container><cp-widget-container class=col-sm-6 label-text=vm.title.form><formly-form form=vm.thisForm model=vm.form fields=vm.formFields class=\"padded-container form-horizontal\" novalidate><div ng-if=!vm.canBook class=\"padded-container has-error\"><span class=help-block>{{vm.bookingErrorMessage}}</span></div><div class=form-group><div class=\"text-center col-sm-12\"><button type=submit ng-disabled=\"vm.thisForm.$invalid || !vm.canBook\" ng-click=vm.onSubmit(vm.form) class=\"btn btn-primary submit-button\">Submit</button></div></div></formly-form></cp-widget-container></div><div class=\"row topbuffer\"><cp-widget-container class=col-xs-12 label-text=vm.title.conflicts><table><thead><tr><th>Punt</th><th>Booked By</th><th>From</th><th>To</th></tr></thead><tbody><tr ng-repeat=\"booking in vm.bookings| conflictBookings:vm.form.timeFrom:vm.form.timeTo | bookingsByPunt:vm.form.punt | orderBy:'timeFrom'\"><td>{{ booking.puntid | puntidToName:vm.punts }}</td><td>{{ booking.userType }}</td><td>{{ booking.timeFrom |dateParse |date:'shortTime':'UTC'}}</td><td>{{ booking.timeTo |dateParse |date:'shortTime':'UTC'}}</td></tr></tbody></table></cp-widget-container></div></div></section>"),e.put("app/bookings/myBookings.html","<div class=container-fluid><div class=row><cp-widget-container class=col-xs-12 label-text=vm.title><form><table class=bottom-row-border><thead><tr><th class=checkColumn></th><th>Punt</th><th ng-if=\"vm.user.type === 'PORTER'\">Name</th><th>Date</th><th>From</th><th>To</th></tr></thead><tbody><tr ng-repeat=\"booking in vm.user.bookings |orderBy:'timeFrom' track by $index\"><td class=checkColumn><input title=bookingId type=checkbox checklist-model=vm.form checklist-value=booking.id></td><td>{{ booking.puntid | puntidToName:vm.punts }}</td><td ng-if=\"vm.user.type === 'PORTER'\">{{booking.name}}</td><td>{{ booking.timeFrom |dateParse |date:'mediumDate':'UTC'}}</td><td>{{ booking.timeFrom |dateParse |date:'shortTime':'UTC'}}</td><td>{{ booking.timeTo |dateParse |date:'shortTime':'UTC'}}</td></tr></tbody></table><div class=\"form-group row topbuffer\"><div class=\"text-center col-xs-12\"><button type=submit class=\"btn btn-primary\" ng-disabled=\"vm.form.length === 0\" ng-click=vm.deleteBooking()>Delete</button></div></div></form></cp-widget-container></div></div>"),e.put("app/charts/myCharts.html","<section id=dashboard-view><div class=container-fluid><div class=row><cp-widget-container class=col-xs-12 label-text=vm.title><div class=padded-container><formly-form class=clearfix model=vm.form fields=vm.formFields></formly-form><div google-chart chart=vm.myChartObject class=googleChart></div></div></cp-widget-container></div></div></section>"),e.put("app/core/404.html","<section id=dashboard-view><section class=container-fluid><div class=row><cp-widget-container class=col-sm-12 label-text=\"'Page Not Found'\"><h2><span class=bold>404</span>Page Not Found</h2><p>No punt for you!</p></cp-widget-container></div></section></section>"),e.put("app/dashboard/dashboard.html","<section id=dashboard-view><div class=container-fluid><div class=row><cp-widget-container class=col-xs-12 label-text=vm.title><cp-widget-punt-status punts=vm.punts bookings=vm.bookings></cp-widget-punt-status></cp-widget-container></div></div></section>"),e.put("app/info/contact.html","<div class=container-fluid><div class=row><cp-widget-container class=col-xs-12 label-text=vm.title><div ng-bind-html=vm.contact.value class=padded-container></div></cp-widget-container></div></div>"),e.put("app/info/rules.html","<div class=container-fluid><div class=row><cp-widget-container label-text=vm.title class=col-xs-12><div ng-bind-html=vm.rules.value class=padded-container></div></cp-widget-container></div></div>"),e.put("app/layout/cp-top-nav.html",'<img src=images/ClareCollegeCrest.png alt="Clare College Crest"><nav class="navbar navbar-inverse"><div class=container-fluid><div class=navbar-header><button type=button class=navbar-toggle data-toggle=collapse data-target=#myNavbar><span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span></button></div><ul class="navbar-nav nav nav-tabs nav-justified collapse navbar-collapse" id=myNavbar><li><a ui-sref=dashboard>{{vm.title}}</a></li><li><a ui-sref=bookAPunt>Book A Punt</a></li><li uib-dropdown is-open=status.isopen><a id=menu-button uib-dropdown-toggle type=button ng-click="menuOpen=!menuOpen">Menu <i class="fa fa-caret-down" aria-hidden=true></i></a><ul class="dropdown-menu dropdown-menu-right" uib-dropdown-menu aria-labelledby=menu-button><li ng-class=vm.isCurrent(r) ng-repeat="r in vm.navRoutes" role=menuitem><a ui-sref={{r.name}} ng-bind-html=r.settings.content></a></li><li class=dropdown-header ng-if=vm.admin>Admin Options</li><li ng-class=vm.isCurrent(r) ng-if=vm.admin ng-repeat="r in vm.adminRoutes" role=menuitem><a ui-sref={{r.name}} ng-bind-html=r.settings.content></a></li></ul></li></ul></div></nav>'),e.put("app/layout/shell.html",'<div ng-controller="ShellController as vm"><header class=clearfix><cp-top-nav user=vm.user></cp-top-nav></header><section id=content class=content><div ui-view class=shuffle-animation></div><div ngplus-overlay ngplus-overlay-delay-in=50 ngplus-overlay-delay-out=700 ngplus-overlay-animation=dissolve-animation><img src=images/busy.gif><div class="page-spinner-message overlay-message">{{vm.busyMessage}}</div></div></section><div><span>{{vm.navline.title +\': v\'+ vm.version}}</span><span class=right><a href={{vm.navline.link}}>{{vm.navline.text}}</a></span></div></div>'),e.put("app/mySettings/mySettings.html",'<div class=container-fluid><div class=row><cp-widget-container class=col-xs-12 label-text=vm.title><formly-form form=vm.thisForm model=vm.form fields=vm.formFields class="form-horizontal padded-container" novalidate><div class=form-group><div class="text-center col-sm-12"><button type=submit ng-click=vm.updateUser(vm.form) ng-disabled=vm.thisForm.$invalid class="btn btn-primary submit-button">Submit</button></div></div></formly-form></cp-widget-container></div></div>'),e.put("app/widgets/widget-punt-status.html",'<table><thead><tr><th>Punt</th><th>Current Booking</th><th>Next Booking</th></tr></thead><tbody><tr ng-repeat="punt in vm.punts"><td class=puntstatus tooltip-placement=bottom tooltip-append-to-body=true uib-tooltip={{punt.currentStatus}}><div class={{punt.currentStatus|statusCircle}}></div>{{punt.name}}</td><td tooltip-placement=bottom tooltip-append-to-body=true uib-tooltip="{{punt.currentBooking | bookingTooltip}}">{{punt.currentBooking | bookingSimple}}</td><td tooltip-placement=bottom tooltip-append-to-body=true uib-tooltip="{{punt.nextBooking | bookingTooltip}}">{{punt.nextBooking | bookingSimple}}</td></tr></tbody></table>'),e.put("app/admin/bookings/adminBookings.html",'<div class=container-fluid ng-if="vm.user.admin===\'1\'"><div class="row top-buffer"><div class=col-xs-12><cp-widget-container label-text=vm.title><formly-form form=vm.thisForm model=vm.form fields=vm.formFields class="form-horizontal padded-container" novalidate><table class="bottom-row-border top-row-border"><thead><tr><th class=checkColumn></th><th>Punt</th><th>Name</th><th>Date</th><th>From</th><th>To</th></tr></thead><tbody><tr ng-repeat="booking in vm.bookings | bookingsByPunt:vm.form.punt | filter:vm.form.search |orderBy:\'timeFrom\' track by $index"><td class=checkColumn><input type=checkbox checklist-model=vm.form.booking checklist-value=booking.id></td><td>{{ booking.puntid | puntidToName:vm.punts }}</td><td>{{ booking.name }}</td><td>{{ booking.timeFrom |dateParse |date:\'mediumDate\':\'UTC\'}}</td><td>{{ booking.timeFrom |dateParse |date:\'shortTime\':\'UTC\'}}</td><td>{{ booking.timeTo |dateParse |date:\'shortTime\':\'UTC\'}}</td></tr></tbody></table><div class="form-group row topbuffer"><div class="text-center col-xs-12"><button type=submit class="btn btn-primary" ng-disabled="vm.form.booking.length === 0" ng-click=vm.deleteBooking()>Delete Booking</button></div></div></formly-form></cp-widget-container></div></div></div>'),e.put("app/admin/punts/adminPunts.html",'<div class=container-fluid ng-if="vm.user.admin===\'1\'"><div class=row><cp-widget-container label-text=vm.title.status class=col-sm-6><cp-widget-punt-status punts=vm.punts bookings=vm.bookings></cp-widget-punt-status></cp-widget-container><cp-widget-container class=col-sm-6 label-text=vm.title.newPunt><formly-form form=vm.thisForm model=vm.newPuntForm fields=vm.newPuntFormFields class="form-horizontal padded-container" novalidate><div class=form-group><div class="text-center col-sm-12"><button type=submit ng-disabled=vm.thisForm.$invalid ng-click=vm.onSubmit(vm.newPuntForm) class="btn btn-primary submit-button">Submit</button></div></div></formly-form></cp-widget-container></div><div class="row topbuffer"><cp-widget-container class=col-sm-6 label-text=vm.title.editPunt><formly-form form=vm.thisEditForm model=vm.editPuntForm fields=vm.editPuntFormFields class="form-horizontal padded-container" novalidate><div class=form-group><div class="text-center col-xs-12"><button type=submit ng-disabled=vm.thisEditForm.$invalid ng-click=vm.onSubmit(vm.editPuntForm) class="btn btn-primary submit-button">Submit</button></div></div></formly-form></cp-widget-container><cp-widget-container class=col-sm-6 label-text=vm.title.deletePunt><form><table class=bottom-row-border><thead><tr><th class=checkColumn></th><th>Punt</th><th>Availbale From</th><th>Available To</th></tr></thead><tbody><tr ng-repeat="punt in vm.punts | orderBy:\'availableFrom\' track by punt.id"><td class=checkColumn><input type=checkbox checklist-model=vm.deletePuntForm checklist-value=punt.id></td><td>{{ punt.name }}</td><td>{{ punt.availableFrom |dateParse |date:\'short\':\'UTC\'}}</td><td>{{ punt.availableTo |dateParse |date:\'short\':\'UTC\'}}</td></tr></tbody></table><div class=padded-container><div class="form-group row"><div class="text-center col-xs-12"><button type=submit class="btn btn-danger" ng-disabled="vm.deletePuntForm.length === 0" ng-click=vm.deletePunt(vm.deletePuntForm)>Delete</button></div></div></div></form></cp-widget-container></div></div>'),e.put("app/admin/settings/adminSettings.html",'<div class=container-fluid ng-if="vm.user.admin === \'1\'"><div class=row><cp-widget-container class=col-xs-12 label-text=vm.title.rules><form class=padded-container><div text-angular ng-model=vm.rules.value></div><div class="form-group row topbuffer"><div class="text-center col-xs-12"><button type=submit class="btn btn-primary" ng-click="vm.updateOptions(\'rules\',vm.rules)">Update</button></div></div></form></cp-widget-container></div><div class="row topbuffer"><cp-widget-container class=col-xs-12 label-text=vm.title.committee><form class=padded-container><div text-angular ng-model=vm.committee.value></div><div class="form-group row topbuffer"><div class="text-center col-xs-12"><button type=submit class="btn btn-primary" ng-click="vm.updateOptions(\'committee\',vm.committee)">Update</button></div></div></form></cp-widget-container></div></div>'),e.put("app/admin/users/adminUsers.html",'<div class=container-fluid ng-if="vm.user.admin===\'1\'"><div class=row><cp-widget-container class=col-sm-6 label-text=vm.title.add><formly-form form=vm.addFormModel model=vm.addForm fields=vm.addFormFields class="form-horizontal padded-container" novalidate><div class="form-group row"><div class="text-center col-xs-12"><button type=submit class="btn btn-primary" ng-disabled=vm.addFormModel.$invalid ng-click=vm.addUser(vm.addForm)>Add Users</button></div></div></formly-form></cp-widget-container><cp-widget-container class=col-sm-6 label-text=vm.title.delete><div class=padded-container><em>Does not delete admin users</em></div><formly-form form=vm.deleteFormModel model=vm.deleteForm fields=vm.deleteFormFields class="form-horizontal padded-container" novalidate><div class="form-group row"><div class="text-center col-xs-12"><button type=submit ng-disabled=vm.deleteFormModel.$invalid class="btn btn-danger" ng-click=vm.purgeUsers(vm.deleteForm.type)>Delete Users</button></div></div></formly-form></cp-widget-container></div><div class="row topbuffer"><cp-widget-container class=col-xs-12 label-text=vm.title.view><formly-form model=vm.viewForm fields=vm.viewFormFields class="form-horizontal padded-container" novalidate><table class="bottom-row-border top-row-border"><thead><tr><th class=checkColumn></th><th>CRSID</th><th>Name</th><th>Type</th><th>Authorised</th></tr></thead><tbody><tr ng-repeat="user in vm.allUsers | usersByType:vm.viewForm.type | filter:vm.viewForm.search |orderBy:\'crsid\' track by $index"><td class=checkColumn><input type=checkbox checklist-model=vm.viewForm.user checklist-value=user.crsid></td><td>{{ user.crsid }}</td><td>{{ user.name }}</td><td>{{ user.type }}</td><td>{{ user.authorised | checkmark }}</td></tr></tbody></table><div class="form-group row"><div class="text-center col-sm-4"><button type=submit class="btn btn-primary" ng-disabled="vm.viewForm.user.length === 0" ng-click=vm.adminUser(vm.viewForm.user)>Toggle Admin</button></div><div class="text-center col-sm-4"><button type=submit class="btn btn-warning" ng-disabled="vm.viewForm.user.length === 0" ng-click=vm.disableUser(vm.viewForm.user)>Toggle Authorised</button></div><div class="text-center col-sm-4"><button type=submit class="btn btn-danger" ng-disabled="vm.viewForm.user.length === 0" ng-click=vm.deleteUser(vm.viewForm.user)>Delete User</button></div></div></formly-form></cp-widget-container></div></div>'),e.put("app/blocks/modal/modal.html",'<div class=modal-header><h3>{{modalOptions.headerText}}</h3></div><div class=modal-body><p>{{modalOptions.bodyText}}</p></div><div class=modal-footer><button type=button class=btn data-ng-click=modalOptions.close()>{{modalOptions.closeButtonText}}</button> <button class="btn btn-primary" data-ng-click=modalOptions.ok();>{{modalOptions.actionButtonText}}</button></div>')}]);